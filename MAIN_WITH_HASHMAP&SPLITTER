package com.example.lee.keyboardtestapp;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import javax.xml.xpath.XPathExpression;

public class MainActivity extends Activity{

    EditText editText;
    Button enterB;
    TextView myTV;
    String userText, replacedText;
    String[] splitter;
    private Map<String, Integer> mySymbolTable = new HashMap<String, Integer>();
    Iterator i;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        myTV = (TextView) findViewById(R.id.textView);
        editText = (EditText) findViewById(R.id.editText);
        enterB = (Button) findViewById(R.id.enterB);

        enterB.setOnClickListener(new View.OnClickListener(){

            @Override
            public void onClick(View v) {
                userInput();
            }
        });
    }

    void userInput(){
        userText = editText.getText().toString();

        if(userText.matches("\\s*int\\s+[a-z]+\\s+=\\s+[0-9]+\\s*;")){
            myTV.setText(myTV.getText() +"\n"+ userText +" "+ "Valid int statement");
            replacedText = userText.replaceAll("int ","").replaceAll(" =","").replaceAll(";","");
            splitter();
            symbolTable();
        }
        else if(userText.matches("\\s*circle(\\s+([0-9]+|[a-z]+)){3}\\s+[0-9]+\\s*;")){
            myTV.setText(myTV.getText() +"\n"+ userText +" "+ "Valid circle statement");
            replacedText = userText.replaceAll("circle ", "").replaceAll(";","");
            splitter();
        }
        else if(userText.matches("\\s*rect(\\s+([0-9]+|[a-z]+)){4}\\s+[0-9]+\\s*;")){
            myTV.setText(myTV.getText() +"\n"+ userText +" "+ "Valid rect statement");
            replacedText = userText.replaceAll("rect ", "").replaceAll(";","");
            splitter();
        }
        else myTV.setText(myTV.getText() +"\n"+ "Invalid statement");
    }
    void splitter(){
        splitter = replacedText.split(" ");

        for(String spl : splitter){
            myTV.setText(myTV.getText() +"\n"+ spl);
            Log.d("Contents of array", "splitter: " + spl);
        }

        Log.d("Array length", "splitter: " + splitter.length);
    }
    void symbolTable(){
        String variable = splitter[0];
        int value = Integer.parseInt(splitter[1]);

        if(!mySymbolTable.containsKey(variable)){

            mySymbolTable.put(variable, value);
            myTV.setText(myTV.getText() +"\n"+ "Value for this key: " + mySymbolTable.get(variable));
        }
        else myTV.setText(myTV.getText() +"\n"+ "This variable already has value of: "
                                                                + mySymbolTable.get(variable));



    }

}
